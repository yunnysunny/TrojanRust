name: Publish

on:
  push:
    tags:
      - '*'
    branches: [ main ]
  
  workflow_dispatch:

jobs:
  build-windows:
    name: Build for Windows x86_64
    runs-on: windows-2019
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup protoc
          uses: arduino/setup-protoc@v1.1.2
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
          
        - name: get-cmake
          uses: lukka/get-cmake@v3.23.0
        
        - name: Visual Studio shell
          uses: egor-tensin/vs-shell@v2
          
        - name: Rust Toolchain
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: stable
        
        - name: Build
          run: cargo build --release --locked

        - name: Upload
          uses: actions/upload-artifact@v2
          with:
            name: trojan_rust_win_x86_64
            path: target/release/trojan-rust.exe
    
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
            linux,
            macos
        ]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: target/release/trojan-rust
            asset_name: trojan-rust-linux
            
          - name: macos
            os: macos-latest
            artifact_name: target/release/trojan-rust
            asset_name: trojan-rust-macos

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup protoc
      uses: arduino/setup-protoc@v1.1.2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Build
      run: |
        cargo build --release --locked
    - name: Strip
      if: runner.os == 'Linux'
      run: |
        which strip
        /usr/bin/strip -s ${{ matrix.artifact_name }}

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.artifact_name }}
  build-cross:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - release_for: Mips-unknown-linux-gnu
            os: ubuntu-20.04
            target: mips-unknown-linux-gnu
            bin: trijan-rust
            name: trojan-rust-mips-unknown-linux-gnu.tar.gz

    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     name: [
    #       mips-unknown-linux-gnu,
    #       mips64-unknown-linux-gnuabi64,
    #       mipsel-unknown-linux-gnu,
    #       aarch64-linux-android,
    #       aarch64-unknown-linux-gnu,
    #       arm-linux-androideabi,
    #       arm-unknown-linux-gnueabi,
    #     ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup protoc
      uses: arduino/setup-protoc@v1.1.2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: 1.71.1
        target: ${{ matrix.platform.target }}

    - name: Build
      run: |
        cargo build --target ${{ matrix.platform.target }} --release --locked
    - name: Strip
      if: runner.os == 'Linux'
      run: |
        which strip
          /usr/bin/strip -s ${{ matrix.platform.bin }}

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: trojan-rust-${{ matrix.platform.target }}
        path: target/release/${{ matrix.platform.bin }}
  publish:
    runs-on: ubuntu-latest
    needs: [build, build-windows]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v2
        with:
          name: trojan_rust_win_x86_64
          path: ~/windows/
      
      - name: Download Ubuntu Artifact
        uses: actions/download-artifact@v2
        with:
          name: trojan-rust-linux
          path: ~/linux/
          
      - name: Download MacOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: trojan-rust-macos
          path: ~/macos/
      
      - name: Rename
        run: |
          ls
          ls ~/linux/
          ls ~/macos/
          ls ~/windows/
          
          mv ~/macos/trojan-rust ./trojan_rust_macos_x86_64
          mv ~/linux/trojan-rust ./trojan_rust_linux_x86_64
          mv ~/windows/trojan-rust.exe ./trojan_rust_win_x86_64.exe
        
      - name: Release
        uses: softprops/action-gh-release@v0.1.7
        with: 
          files: |
            trojan_rust_win_x86_64.exe
            trojan_rust_linux_x86_64
            trojan_rust_macos_x86_64
